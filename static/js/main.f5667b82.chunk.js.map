{"version":3,"sources":["helpers/constants.js","helpers/functions.js","Modal.js","helpers/useOnClickOutside.js","EventModal.js","DayOfMonth.js","CalendarDay.js","CalendarDays.js","helpers/useLocalStorage.js","HeaderAction.js","Calendar.js","App.js","index.js"],"names":["WEEKDAYS","DATE_FORMAT","YEAR_FORMAT","initialFormData","title","place","time","description","getToday","moment","format","getMonthYear","month","year","getCurrentMonthDays","monthDaysList","Array","from","daysInMonth","countDaysInMonth","num","k","map","day","dayOfMonth","date","isCurrentMonth","Modal","subtitle","isVisible","isDisabled","handleClose","handleSave","handleDelete","children","ref","useRef","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","keydownHandler","key","className","onSubmit","type","onClick","autoFocus","icon","faTimes","disabled","EventModal","modalVisible","handleModalClose","handleModalSave","handleModalDelete","initialModalData","isEditingEvent","dateSelected","useState","formData","setFormData","initialValidationData","isValidated","setIsValidated","handleFormInputChange","prevState","name","value","ev","preventDefault","bind","htmlFor","id","onChange","step","DayOfMonth","handleModalOpen","hovered","setHovered","toggleHover","onMouseEnter","onMouseLeave","classNames","faCalendarPlus","CalendarDay","eventData","cssClass","Object","keys","sort","a","b","localeCompare","eventKey","timeEvent","CalendarDays","setModalVisible","modalDateOpen","setModalDateOpen","initialValue","window","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","eventsData","setEventsData","setInitialModalData","currentMonthYear","currentMonthDays","previousMonthDays","currentMonthYearDate","currentMonthFirstDate","firstDayOfTheMonthWeekday","weekday","previousMonth","subtract","visibleNumberOfDaysFromPreviousMonth","previousMonthLastMondayDayOfMonth","getPreviousMonthDays","clone","nextMonthDays","currentMonthLastDate","lastDayOfTheMonthWeekday","nextMonth","add","visibleNumberOfDaysFromNextMonth","getNextMonthDays","slice","calendarDays","hasModalData","confirm","restTimeItems","dayItems","length","restDayItems","ICON_NAME","left","faChevronLeft","right","faChevronRight","today","faCalendarDay","HeaderAction","iconName","callback","Calendar","initialMonthDate","Date","monthSelected","setMonthSelected","isSwiping","setIsSwiping","handlers","useSwipeable","onSwipedLeft","handleClickNextMonth","onSwipedRight","handleClickPreviousMonth","onSwipeStart","onSwiped","onTouchEndOrOnMouseUp","swipeDuration","preventScrollOnSwipe","trackMouse","App","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.f5667b82.chunk.js","sourcesContent":["const WEEKDAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst DATE_TIME_FORMAT = 'YYYY-MM-DD hh:mm';\nconst DATE_FORMAT = 'YYYY-MM-DD';\nconst MONTH_FORMAT = 'M';\nconst YEAR_FORMAT = 'YYYY';\nconst CAL_FORMAT = 'ddd, D MMM';\nconst initialFormData = {\n  title: '',\n  // attendees: [],\n  place: '',\n  time: '09:00',\n  description: ''\n};\n\nexport {\n  WEEKDAYS,\n  DATE_TIME_FORMAT,\n  DATE_FORMAT,\n  MONTH_FORMAT,\n  YEAR_FORMAT,\n  CAL_FORMAT,\n  initialFormData\n};\n","import moment from 'moment';\nimport { DATE_FORMAT, YEAR_FORMAT, MONTH_FORMAT } from './constants';\n\nfunction getToday() {\n  return moment().format(DATE_FORMAT);\n}\n\nfunction getInitialYear() {\n  return moment().format(YEAR_FORMAT);\n}\n\nfunction getInitialMonth() {\n  return moment().format(MONTH_FORMAT);\n}\n\nfunction getMonthYear(month, year) {\n  return moment(`${year}-${month}-01`, DATE_FORMAT);\n}\n\nfunction countDaysInMonth(month, year) {\n  return getMonthYear(month, year).daysInMonth();\n}\n\nfunction getCurrentMonthDays(month, year) {\n  const monthDaysList = Array.from(\n    Array(countDaysInMonth(month, year)),\n    (num, k) => k + 1\n  );\n\n  return monthDaysList.map((day) => {\n    return {\n      dayOfMonth: day,\n      date: moment(`${year}-${month}-${day}`, DATE_FORMAT).format(DATE_FORMAT),\n      isCurrentMonth: true\n    };\n  });\n}\n\nfunction getPreviousMonthDays(currentMonthYearDate, currentMonthFirstDate) {\n  const firstDayOfTheMonthWeekday = moment(currentMonthFirstDate).weekday();\n\n  const previousMonth = currentMonthYearDate.subtract(1, 'month');\n\n  const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\n    ? firstDayOfTheMonthWeekday - 1\n    : 6;\n\n  let previousMonthLastMondayDayOfMonth = moment(currentMonthFirstDate)\n    .subtract(visibleNumberOfDaysFromPreviousMonth, 'day')\n    .date();\n\n  const monthDaysList = Array.from(\n    Array(visibleNumberOfDaysFromPreviousMonth),\n    () => previousMonthLastMondayDayOfMonth++\n  );\n\n  return monthDaysList.map((day) => {\n    return {\n      date: moment(\n        `${previousMonth.year()}-${previousMonth.month() + 1}-${day}`,\n        DATE_FORMAT\n      ).format(DATE_FORMAT),\n      dayOfMonth: day,\n      isCurrentMonth: false\n    };\n  });\n}\n\nfunction getNextMonthDays(currentMonthYearDate, currentMonthLastDate) {\n  const lastDayOfTheMonthWeekday = moment(currentMonthLastDate).weekday();\n\n  const nextMonth = currentMonthYearDate.add(1, 'month');\n\n  const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\n    ? 7 - lastDayOfTheMonthWeekday\n    : lastDayOfTheMonthWeekday;\n\n  const monthDaysList = Array.from(\n    Array(visibleNumberOfDaysFromNextMonth),\n    (num, k) => k + 1\n  );\n\n  return monthDaysList.map((day) => {\n    return {\n      date: moment(\n        `${nextMonth.year()}-${nextMonth.month() + 1}-${day}`,\n        DATE_FORMAT\n      ).format(DATE_FORMAT),\n      dayOfMonth: day,\n      isCurrentMonth: false\n    };\n  });\n}\n\nexport {\n  getToday,\n  getInitialYear,\n  getInitialMonth,\n  getMonthYear,\n  getCurrentMonthDays,\n  getPreviousMonthDays,\n  getNextMonthDays\n};\n","import { useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './Modal.scss';\nimport useOnClickOutside from './helpers/useOnClickOutside';\n\nexport default function Modal({\n  title,\n  subtitle,\n  isVisible,\n  isDisabled,\n  handleClose,\n  handleSave,\n  handleDelete = () => null,\n  children\n}) {\n  const ref = useRef();\n  useOnClickOutside(ref, handleClose);\n\n  const keydownHandler = ({ key }) => {\n    switch (key) {\n      case 'Escape':\n        handleClose();\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler);\n    return () => document.removeEventListener('keydown', keydownHandler);\n  });\n\n  return (\n    isVisible && (\n      <div className=\"modal\" aria-modal=\"true\">\n        <form className=\"modal-main\" onSubmit={handleSave} ref={ref}>\n          <header className=\"modal-header\">\n            <div>\n              <h2 className=\"modal-title\">{title}</h2>\n              <p className=\"modal-subtitle\">{subtitle}</p>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"modal-close\"\n              onClick={handleClose}\n              autoFocus\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </header>\n\n          <div className=\"modal-body\">{children}</div>\n\n          <div className=\"modal-actions\">\n            {handleDelete && (\n              <button\n                type=\"button\"\n                className=\"modal-action-delete\"\n                onClick={handleDelete}\n              >\n                Delete\n              </button>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"modal-action-cancel\"\n              onClick={handleClose}\n            >\n              Cancel\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"modal-action-save\"\n              disabled={isDisabled}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  );\n}\n","import { useEffect } from 'react';\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import { useEffect, useState } from 'react';\nimport './EventModal.scss';\nimport moment from 'moment';\n\nimport Modal from './Modal';\nimport { CAL_FORMAT, initialFormData } from './helpers/constants';\n\nexport default function EventModal({\n  modalVisible,\n  handleModalClose,\n  handleModalSave,\n  handleModalDelete,\n  initialModalData,\n  isEditingEvent,\n  dateSelected\n}) {\n  const [formData, setFormData] = useState(initialFormData);\n  const initialValidationData = !!formData.title && !!formData.time;\n  const [isValidated, setIsValidated] = useState(initialValidationData);\n\n  useEffect(() => {\n    if (!initialModalData) return;\n\n    setFormData(initialModalData);\n  }, [initialModalData]);\n\n  useEffect(() => {\n    if (!formData.title || !formData.time) return setIsValidated(false);\n\n    setIsValidated(true);\n  }, [formData.title, formData.time]);\n\n  function handleFormInputChange({ target }) {\n    setFormData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  }\n\n  function handleSave(ev) {\n    ev.preventDefault();\n\n    handleModalSave(formData);\n  }\n\n  return (\n    <Modal\n      title={isEditingEvent ? 'Edit the event' : 'Add a new event'}\n      subtitle={moment(dateSelected).format(CAL_FORMAT)}\n      isVisible={modalVisible}\n      isDisabled={!isValidated}\n      handleClose={handleModalClose}\n      handleSave={handleSave}\n      handleDelete={isEditingEvent && handleModalDelete.bind(null, formData)}\n    >\n      <section className=\"modal-field\">\n        <label htmlFor=\"modal_field_title\">Title *</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"modal_field_title\"\n          value={formData.title}\n          onChange={handleFormInputChange}\n        />\n      </section>\n\n      <section className=\"modal-field\">\n        <label htmlFor=\"modal_field_place\">Place</label>\n        <input\n          type=\"text\"\n          name=\"place\"\n          id=\"modal_field_place\"\n          value={formData.place}\n          onChange={handleFormInputChange}\n        />\n      </section>\n\n      <section className=\"modal-field\">\n        <label htmlFor=\"modal_field_time\">Time *</label>\n        <input\n          type=\"time\"\n          name=\"time\"\n          id=\"modal_field_time\"\n          value={formData.time}\n          onChange={handleFormInputChange}\n          step={60 * 15}\n        />\n      </section>\n\n      <section className=\"modal-field\">\n        <label htmlFor=\"modal_field_description\">Description</label>\n        <textarea\n          name=\"description\"\n          id=\"modal_field_description\"\n          value={formData.description}\n          onChange={handleFormInputChange}\n        ></textarea>\n      </section>\n\n      <div className=\"modal-info\">Mandatory fields (*)</div>\n    </Modal>\n  );\n}\n","import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport './DayOfMonth.scss';\n\nexport default function DayOfMonth({ day, handleModalOpen }) {\n  const [hovered, setHovered] = useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return (\n    <button\n      className=\"day-of-month-wrapper\"\n      onClick={() => handleModalOpen(day)}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n      title=\"Add a new event\"\n    >\n      <span\n        className={classNames(\n          'day-of-month day-of-month-text',\n          hovered ? 'invisible' : 'visible'\n        )}\n      >\n        {day.dayOfMonth}\n      </span>\n      <span\n        className={classNames(\n          'day-of-month day-of-month-icon',\n          hovered ? 'visible' : 'invisible'\n        )}\n      >\n        <FontAwesomeIcon icon={faCalendarPlus} />\n      </span>\n    </button>\n  );\n}\n","import classNames from 'classnames';\n\nimport './CalendarDay.scss';\nimport DayOfMonth from './DayOfMonth';\nimport { getToday } from './helpers/functions';\n\nexport default function CalendarDay({ day, eventData, handleModalOpen }) {\n  const cssClass = classNames('calendar-day', {\n    'is-current': day.isCurrentMonth,\n    'is-today': day.date === getToday()\n  });\n\n  return (\n    <div className={cssClass}>\n      <DayOfMonth day={day} handleModalOpen={handleModalOpen} />\n\n      {eventData && (\n        <ul className=\"day-events\">\n          {Object.keys(eventData)\n            .sort((a, b) => a.localeCompare(b))\n            .map((eventKey) => {\n              const timeEvent = eventData[eventKey];\n\n              return (\n                <li\n                  key={`${day.date}_${timeEvent.time}`}\n                  className=\"day-event\"\n                  onClick={() => handleModalOpen(day, timeEvent)}\n                  title=\"Edit event\"\n                >\n                  <div>{timeEvent.title}</div>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { Fragment, useEffect, useState } from 'react';\nimport './CalendarDays.scss';\n\nimport { initialFormData } from './helpers/constants';\nimport EventModal from './EventModal';\nimport CalendarDay from './CalendarDay';\nimport useLocalStorage from './helpers/useLocalStorage';\nimport {\n  getMonthYear,\n  getCurrentMonthDays,\n  getPreviousMonthDays,\n  getNextMonthDays\n} from './helpers/functions';\n\nconst confirmationMessage = 'Are you sure you want to delete the event?';\n\nexport default function CalendarDays({ month, year }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalDateOpen, setModalDateOpen] = useState('');\n  const [eventsData, setEventsData] = useLocalStorage('Calendar::events', {});\n  const [initialModalData, setInitialModalData] = useState(initialFormData);\n\n  const currentMonthYear = getMonthYear(month, year);\n  const currentMonthDays = getCurrentMonthDays(month, year);\n  const previousMonthDays = getPreviousMonthDays(\n    currentMonthYear.clone(),\n    currentMonthDays[0].date\n  );\n  const nextMonthDays = getNextMonthDays(\n    currentMonthYear.clone(),\n    currentMonthDays.slice(-1)[0].date\n  );\n  const calendarDays = [\n    ...previousMonthDays,\n    ...currentMonthDays,\n    ...nextMonthDays\n  ];\n\n  const hasModalData = !!(initialModalData && initialModalData.title);\n\n  useEffect(() => {\n    if (modalVisible) return;\n\n    setInitialModalData(initialFormData);\n  }, [modalVisible]);\n\n  function handleModalSave(formData) {\n    setEventsData((prevState) => ({\n      ...prevState,\n      [modalDateOpen]: {\n        ...prevState[modalDateOpen],\n        [formData.time]: formData\n      }\n    }));\n\n    setModalVisible(false);\n  }\n\n  function handleModalDelete(formData) {\n    const confirmation = window.confirm(confirmationMessage);\n\n    if (!confirmation) return;\n\n    setEventsData((prevState) => {\n      // Remove time key and data\n      const { [formData.time]: deletedTimeKey, ...restTimeItems } = prevState[\n        modalDateOpen\n      ];\n\n      // Keep other day events, if available\n      const dayItems = Object.keys(restTimeItems).length\n        ? {\n            [modalDateOpen]: {\n              ...restTimeItems\n            }\n          }\n        : null;\n\n      if (!dayItems) {\n        // Remove day key and data, if no other event for current day\n        const { [modalDateOpen]: deletedDayKey, ...restDayItems } = prevState;\n        // Return previous state, without current day event key\n        return { ...restDayItems };\n      }\n\n      return {\n        ...prevState,\n        ...dayItems\n      };\n    });\n\n    setModalVisible(false);\n  }\n\n  function handleModalOpen(day, eventData = null) {\n    setModalDateOpen(day.date);\n    setInitialModalData(eventData);\n    setModalVisible(true);\n  }\n\n  function handleModalClose() {\n    setModalVisible(false);\n  }\n\n  return (\n    <Fragment>\n      <section className=\"calendar-days\">\n        {calendarDays.map((day) => (\n          <CalendarDay\n            key={day.date}\n            day={day}\n            handleModalOpen={handleModalOpen}\n            eventData={eventsData[day.date]}\n          />\n        ))}\n      </section>\n\n      <EventModal\n        modalVisible={modalVisible}\n        handleModalClose={handleModalClose}\n        handleModalSave={handleModalSave}\n        handleModalDelete={handleModalDelete}\n        initialModalData={initialModalData}\n        isEditingEvent={hasModalData}\n        dateSelected={modalDateOpen}\n      />\n    </Fragment>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n    try {\n      const item = window.localStorage.getItem(key);\n      \n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n  \n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      \n      setStoredValue(valueToStore);\n      \n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faCalendarDay\n} from '@fortawesome/free-solid-svg-icons';\nimport './HeaderAction.scss';\nimport classNames from 'classnames';\n\nconst ICON_NAME = {\n  left: faChevronLeft,\n  right: faChevronRight,\n  today: faCalendarDay\n};\n\nexport default function HeaderAction({ iconName, callback, title, cssClass }) {\n  return (\n    <button\n      className={classNames('header-action', 'icon-btn', cssClass)}\n      title={title}\n      onClick={() => callback()}\n    >\n      <FontAwesomeIcon icon={ICON_NAME[iconName]} />\n    </button>\n  );\n}\n","import { useState } from 'react';\nimport moment from 'moment';\nimport { useSwipeable } from 'react-swipeable';\nimport classNames from 'classnames';\nimport './Calendar.scss';\n\nimport { WEEKDAYS, MONTH_FORMAT, YEAR_FORMAT } from './helpers/constants';\nimport { getToday, getInitialMonth, getInitialYear } from './helpers/functions';\nimport CalendarDays from './CalendarDays';\nimport HeaderAction from './HeaderAction';\n\nexport default function Calendar({\n  month = getInitialMonth(),\n  year = getInitialYear()\n}) {\n  const initialMonthDate = moment(new Date(year, month - 1, 1));\n  const [monthSelected, setMonthSelected] = useState({\n    date: initialMonthDate\n  });\n  const [isSwiping, setIsSwiping] = useState(false);\n  const handlers = useSwipeable({\n    onSwipedLeft: handleClickNextMonth,\n    onSwipedRight: handleClickPreviousMonth,\n    onSwipeStart: () => setIsSwiping(true),\n    onSwiped: () => setIsSwiping(false),\n    onTouchEndOrOnMouseUp: () => setIsSwiping(false),\n    swipeDuration: 500,\n    preventScrollOnSwipe: true,\n    trackMouse: true\n  });\n\n  function handleClickPreviousMonth() {\n    setMonthSelected((prevState) => ({\n      date: prevState.date.clone().subtract(1, 'month')\n    }));\n  }\n\n  function handleClickToday() {\n    setMonthSelected({ date: moment(getToday()) });\n  }\n\n  function handleClickNextMonth() {\n    setMonthSelected((prevState) => ({\n      date: prevState.date.clone().add(1, 'month')\n    }));\n  }\n\n  return (\n    <article className=\"calendar\">\n      <header className=\"calendar-header\">\n        <HeaderAction\n          title=\"Previous month\"\n          iconName=\"left\"\n          callback={handleClickPreviousMonth}\n          cssClass=\"action-previous\"\n        />\n\n        <div className=\"header-selected-month\">\n          {monthSelected.date.format('MMMM YYYY')}\n        </div>\n\n        <HeaderAction\n          title=\"Today\"\n          iconName=\"today\"\n          callback={handleClickToday}\n        />\n\n        <HeaderAction\n          title=\"Next month\"\n          iconName=\"right\"\n          callback={handleClickNextMonth}\n          cssClass=\"action-next\"\n        />\n      </header>\n\n      <section className=\"day-of-week\">\n        {WEEKDAYS.map((day) => (\n          <div key={day}>{day}</div>\n        ))}\n      </section>\n\n      <section\n        className={classNames('calendar-days-wrapper', {\n          'is-swiping': isSwiping\n        })}\n        {...handlers}\n      >\n        <CalendarDays\n          month={monthSelected.date.format(MONTH_FORMAT)}\n          year={monthSelected.date.format(YEAR_FORMAT)}\n        />\n      </section>\n    </article>\n  );\n}\n","import Calendar from './Calendar';\nimport './styles.css';\nimport './colors.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}